const uuidv1 = require('uuid/v1');
const AWS = require('aws-sdk');
const REGION = event.process.environment.REGION;
const dynamodb = new AWS.DynamoDB.DocumentClient({
    region: REGION
});
const USER_TABLE_NAME = event.process.environment.USERS_TABLE;
const SALT_ROUNDS = 10;


exports.handler = (event, context, callback) => {
    if (event.body !== null && event.body !== undefined) {
        event = JSON.parse(event.body)
    }
    const newUser = {};
    const timestamp = new Date().getTime();
    bcrypt.hash(myPlaintextPassword, SALT_ROUNDS, function(err, hash) {
        // Store hash in your password DB.
        newUser[Item] = {
            "userid": {
                S: uuidv1
            },
            "email": {
                S: event.email
            },
            "firstname": {
                S: event.firstname
            },
            "lastname": {
                S: event.lastname
            },
            "password": {
                S: event.hash
            }
        };
        newUser[ReturnConsumedCapacity] = 'TOTAL';
        newUser[TableName] = USER_TABLE_NAME;
    });
    
    let newUser = {
        Item: {
            "userid": {
                S: uuidv1
            },
            "email": {
                S: event.email
            },
            "firstname": {
                S: event.firstname
            },
            "lastname": {
                S: event.lastname
            },
            "password": {
                S: event.password
            }
        },
        ReturnConsumedCapacity: "TOTAL",
        TableName: USER_TABLE_NAME
    };

    dynamodb.putItem(params, (err, data) => {
        if (err) {

        } else {
            console.log('data', data);
        }
    });
}